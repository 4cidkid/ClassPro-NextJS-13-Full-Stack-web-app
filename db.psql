-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.advertisements
(
    advertisements_id integer NOT NULL DEFAULT nextval('advertisements_advertisements_id_seq'::regclass),
    advertisements_title character varying(50) COLLATE pg_catalog."default" NOT NULL,
    advertisements_description text COLLATE pg_catalog."default" NOT NULL,
    tutor_id integer NOT NULL,
    advertisements_price money NOT NULL,
    subject_id integer NOT NULL,
    advertisements_level advertisements_level_enum NOT NULL,
    CONSTRAINT advertisements_pkey PRIMARY KEY (advertisements_id)
);

CREATE TABLE IF NOT EXISTS public.country
(
    id integer NOT NULL DEFAULT nextval('country_seq'::regclass),
    iso character(2) COLLATE pg_catalog."default" NOT NULL,
    name character varying(80) COLLATE pg_catalog."default" NOT NULL,
    nicename character varying(80) COLLATE pg_catalog."default" NOT NULL,
    iso3 character(3) COLLATE pg_catalog."default" DEFAULT NULL::bpchar,
    numcode smallint,
    phonecode integer NOT NULL,
    CONSTRAINT country_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.images
(
    image_id integer NOT NULL DEFAULT nextval('images_image_id_seq'::regclass),
    image_url text COLLATE pg_catalog."default" NOT NULL,
    image_alt character varying(20) COLLATE pg_catalog."default",
    uploaded_at timestamp without time zone,
    CONSTRAINT images_pkey PRIMARY KEY (image_id)
);

CREATE TABLE IF NOT EXISTS public.languages
(
    id integer NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    iso character(2) COLLATE pg_catalog."default",
    CONSTRAINT languages_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.private_class
(
    class_id integer NOT NULL DEFAULT nextval('private_class_class_id_seq'::regclass),
    student_id integer NOT NULL,
    tutor_id integer NOT NULL,
    transaction_id integer NOT NULL,
    class_status class_status_enum NOT NULL,
    class_date date NOT NULL,
    CONSTRAINT private_class_pkey PRIMARY KEY (class_id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    review_id integer NOT NULL DEFAULT nextval('reviews_review_id_seq'::regclass),
    review_rating real NOT NULL,
    review_description character varying(250) COLLATE pg_catalog."default",
    review_date date NOT NULL,
    student_id integer NOT NULL,
    tutor_id integer NOT NULL,
    class_id integer NOT NULL,
    CONSTRAINT reviews_pkey PRIMARY KEY (review_id)
);

CREATE TABLE IF NOT EXISTS public.students
(
    student_id integer NOT NULL DEFAULT nextval('students_student_id_seq'::regclass),
    student_name character varying(60) COLLATE pg_catalog."default" NOT NULL,
    student_lastname character varying(70) COLLATE pg_catalog."default" NOT NULL,
    student_email character varying(256) COLLATE pg_catalog."default" NOT NULL,
    student_phone character varying(15) COLLATE pg_catalog."default",
    image_id integer,
    country_id integer NOT NULL,
    student_password text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT students_pkey PRIMARY KEY (student_id)
);

CREATE TABLE IF NOT EXISTS public.subjects
(
    subject_id integer NOT NULL DEFAULT nextval('subjects_subject_id_seq'::regclass),
    subject_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT subjects_pkey PRIMARY KEY (subject_id)
);

CREATE TABLE IF NOT EXISTS public.transactions
(
    transaction_id integer NOT NULL DEFAULT nextval('transactions_transaction_id_seq'::regclass),
    transaction_status transactions_status_enum NOT NULL,
    CONSTRAINT transactions_pkey PRIMARY KEY (transaction_id)
);

CREATE TABLE IF NOT EXISTS public.tutors
(
    tutor_id integer NOT NULL DEFAULT nextval('tutors_tutor_id_seq'::regclass),
    tutor_name character varying(60) COLLATE pg_catalog."default" NOT NULL,
    tutor_lastname character varying(70) COLLATE pg_catalog."default" NOT NULL,
    tutor_email character varying(256) COLLATE pg_catalog."default" NOT NULL,
    tutor_phone character varying(15) COLLATE pg_catalog."default",
    tutor_hourly_wage money NOT NULL,
    tutor_skills character varying(30)[] COLLATE pg_catalog."default" NOT NULL,
    tutor_description text COLLATE pg_catalog."default" NOT NULL,
    image_id integer,
    tutor_password text COLLATE pg_catalog."default" NOT NULL,
    country_id integer,
    tutor_first_free boolean,
    CONSTRAINT tutors_pkey PRIMARY KEY (tutor_id)
);

CREATE TABLE IF NOT EXISTS public.tutors_language
(
    tutors_language_id integer NOT NULL DEFAULT nextval('tutors_language_tutors_language_id_seq'::regclass),
    tutor_id integer NOT NULL,
    language_id integer NOT NULL,
    CONSTRAINT tutors_language_pkey PRIMARY KEY (tutors_language_id),
    CONSTRAINT unique_tutor_language UNIQUE (tutor_id, language_id)
);

CREATE TABLE IF NOT EXISTS public.tutors_subjects
(
    tutor_id integer NOT NULL,
    subject_id integer NOT NULL,
    subject_level text[] COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tutors_subjects_pkey PRIMARY KEY (tutor_id, subject_id)
);

ALTER TABLE IF EXISTS public.advertisements
    ADD CONSTRAINT advertisements_subject_id_fkey FOREIGN KEY (subject_id)
    REFERENCES public.subjects (subject_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.advertisements
    ADD CONSTRAINT advertisements_tutor_id_fkey FOREIGN KEY (tutor_id)
    REFERENCES public.tutors (tutor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.private_class
    ADD CONSTRAINT private_class_student_id_fkey FOREIGN KEY (student_id)
    REFERENCES public.students (student_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.private_class
    ADD CONSTRAINT private_class_transaction_id_fkey FOREIGN KEY (transaction_id)
    REFERENCES public.transactions (transaction_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.private_class
    ADD CONSTRAINT private_class_tutor_id_fkey FOREIGN KEY (tutor_id)
    REFERENCES public.tutors (tutor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT reviews_class_id_fkey FOREIGN KEY (class_id)
    REFERENCES public.private_class (class_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT reviews_student_id_fkey FOREIGN KEY (student_id)
    REFERENCES public.students (student_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT reviews_tutor_id_fkey FOREIGN KEY (tutor_id)
    REFERENCES public.tutors (tutor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.students
    ADD CONSTRAINT students_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.country (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.students
    ADD CONSTRAINT students_image_id_fkey FOREIGN KEY (image_id)
    REFERENCES public.images (image_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tutors
    ADD CONSTRAINT tutors_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.country (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tutors
    ADD CONSTRAINT tutors_image_id_fkey FOREIGN KEY (image_id)
    REFERENCES public.images (image_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tutors_language
    ADD CONSTRAINT tutors_language_language_id_fkey FOREIGN KEY (language_id)
    REFERENCES public.languages (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tutors_language
    ADD CONSTRAINT tutors_language_tutor_id_fkey FOREIGN KEY (tutor_id)
    REFERENCES public.tutors (tutor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tutors_subjects
    ADD CONSTRAINT tutors_subjects_subject_id_fkey FOREIGN KEY (subject_id)
    REFERENCES public.subjects (subject_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tutors_subjects
    ADD CONSTRAINT tutors_subjects_tutor_id_fkey FOREIGN KEY (tutor_id)
    REFERENCES public.tutors (tutor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;